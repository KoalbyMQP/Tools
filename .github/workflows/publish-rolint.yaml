name: RoLint - Publish to PyPI

on:
  push:
    branches: [ main ]
    paths:
      - 'RoLint/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./RoLint
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Fetch full history for proper versioning
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        # Install package dependencies to ensure clean build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Get package version
      id: get_version
      run: |
        # Extract version from pyproject.toml
        VERSION=$(python -c "
        try:
            import tomllib
            with open('pyproject.toml', 'rb') as f:
                data = tomllib.load(f)
            print(data['project']['version'])
        except:
            import configparser
            import os
            if os.path.exists('setup.cfg'):
                config = configparser.ConfigParser()
                config.read('setup.cfg')
                print(config['metadata']['version'])
            else:
                print('unknown')
        " 2>/dev/null || echo "unknown")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"
    
    - name: Check if version exists on PyPI
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        echo "Checking if RoLint v$VERSION already exists on PyPI..."
        
        # Check if this version already exists
        if pip index versions rolint | grep -q "$VERSION"; then
          echo "Version $VERSION already exists on PyPI!"
          echo "Please bump the version in pyproject.toml before publishing."
          exit 1
        else
          echo "Version $VERSION is new - proceeding with publish"
        fi
    
    - name: Build package
      run: |
        echo "Building RoLint package..."
        python -m build
        echo "Built files:"
        ls -la dist/
    
    - name: Validate package
      run: |
        echo "Validating package before upload..."
        twine check dist/*
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "Publishing RoLint to PyPI..."
        twine upload dist/*
        echo "Successfully published to PyPI!"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: rolint-v${{ steps.get_version.outputs.version }}
        name: RoLint v${{ steps.get_version.outputs.version }}
        body: |
          RoLint v${{ steps.get_version.outputs.version }} has been published to PyPI!
          
          ## Installation
          ```bash
          pip install rolint
          # Or upgrade existing installation
          pip install --upgrade rolint
          ```
          
          ## Changes
          ${{ github.event.head_commit.message }}
          
          ## Links
          - [PyPI Package](https://pypi.org/project/rolint/${{ steps.get_version.outputs.version }}/)
          - [Documentation](https://github.com/${{ github.repository }}/tree/main/RoLint)
          - [Report Issues](https://github.com/${{ github.repository }}/issues)
          
          **Commit:** `${{ github.sha }}`
        draft: false
        prerelease: false
    
    - name: Notify success
      run: |
        echo "RoLint v${{ steps.get_version.outputs.version }} published successfully!"
        echo "Package is now available: pip install rolint"
        echo "GitHub release created: rolint-v${{ steps.get_version.outputs.version }}"