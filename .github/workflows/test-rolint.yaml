name: RoLint - Test & Build

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'RoLint/**'
  workflow_dispatch:  # Allows manual triggering
    inputs:
      reason:
        description: 'Reason for manual run'
        required: false
        default: 'Manual test run'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    defaults:
      run:
        working-directory: ./RoLint
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        # Install the package in development mode
        pip install -e .
        
    # - name: Run tests
    #   run: |
    #     echo "Running tests..."
    #     if [ -d "tests" ]; then
    #       pytest tests/ -v --tb=short
    #     else
    #       echo "No tests directory found, skipping test step"
    #     fi
    
    # Only build the package once (on Python 3.11) to verify it can be built
    - name: Build package
      run: |
        echo "Building package..."
        python -m build
    
    - name: Check built package
      run: |
        echo "Validating built package..."
        pip install twine
        twine check dist/*
        echo "Package structure:"
        ls -la dist/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rolint-dist-${{ github.sha }}
        path: RoLint/dist/
        retention-days: 5
    
    - name: Test installation
      run: |
        echo "Testing package installation..."
        # Create a fresh virtual environment and test installation
        cd /tmp
        python -m venv test_env
        source test_env/bin/activate
        pip install $GITHUB_WORKSPACE/RoLint/dist/*.whl
        python -c "import rolint; print('RoLint package imported successfully!')"
        # Test CLI if it exists
        if command -v rolint &> /dev/null; then
          rolint --help || echo "CLI help not available, but command exists"
        fi

  summary:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: always()
    